name: Java CI with Maven and Docker Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U myuser; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydatabase
          SPRING_DATASOURCE_USERNAME: myuser
          SPRING_DATASOURCE_PASSWORD: mypassword

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Docker build for Spring Boot app
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring_boot_app:latest .

      - name: Docker build for PostgreSQL
        run: |
          docker pull postgres:13
          docker tag postgres:13 ${{ secrets.DOCKER_USERNAME }}/postgres:latest

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Docker push for Spring Boot app
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring_boot_app:latest

      - name: Docker push for PostgreSQL
        run: docker push ${{ secrets.DOCKER_USERNAME }}/postgres:latest
